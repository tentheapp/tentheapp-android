package com.nvcomputers.ten.views.auth;

import android.content.Intent;
import android.support.v7.widget.RecyclerView;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.nvcomputers.ten.R;
import com.nvcomputers.ten.adapter.CountryCodeAdapter;
import com.nvcomputers.ten.adapter.CountryCodeAdapter1;
import com.nvcomputers.ten.dialog.CountryDialog;
import com.nvcomputers.ten.dialog.CountryDialog1;
import com.nvcomputers.ten.interfaces.AppCommonCallback;
import com.nvcomputers.ten.interfaces.ResultCallbacks;
import com.nvcomputers.ten.model.input.ForgotPasswordPhoneInput;
import com.nvcomputers.ten.model.input.PhoneVerifyInput;
import com.nvcomputers.ten.model.output.ForgotPasswordResponse;
import com.nvcomputers.ten.model.output.PhoneVerifyResponse;
import com.nvcomputers.ten.presenter.ForgotPasswordPhonePresenter;
import com.nvcomputers.ten.presenter.PhoneVerifyPresenter;
import com.nvcomputers.ten.utils.IntentHandler;
import com.nvcomputers.ten.utils.Utilities;
import com.nvcomputers.ten.views.core.BaseActivity;

import java.util.ArrayList;

import retrofit2.Call;
import retrofit2.Response;

public class PhoneVerificationForgetPasswordActivity extends BaseActivity implements View.OnClickListener, AppCommonCallback, ResultCallbacks.PhoneVerifyCallback, ForgotPasswordPhonePresenter.ForgotPassPhoneCallback, TextWatcher {

    private EditText phoneNumberEt;
    private Button mSendButton, mTryEmailBtn;
    private ImageView mCrossImageView;
    private TextView mPhoneCodeTextView;
    private CountryDialog1 countryDialog;
    private String phonenoCode = "1", phoneNumber;
    private ProgressBar progressBar;
    private TextView backBtn;
    //private String actionFor;
    private RelativeLayout mainLayout;
    private RelativeLayout parentView;
    private String mCountryId="1";

    @Override
    protected int getLayoutId() {
        return R.layout.activity_forget_password_phone;
    }

    @Override
    protected void initViews() {
        //actionFor = getIntent().getStringExtra("action_for");
        progressBar = (ProgressBar) findViewById(R.id.progressBar);
        phoneNumberEt = (EditText) findViewById(R.id.edit_text_phnnumber);
        mTryEmailBtn = (Button) findViewById(R.id.button_try_email);
        mPhoneCodeTextView = (TextView) findViewById(R.id.text_view_frontcode);
        mCrossImageView = (ImageView) findViewById(R.id.image_view_tick);
        mainLayout = (RelativeLayout) findViewById(R.id.parentView);
        mPhoneCodeTextView.setOnClickListener(this);
        mSendButton =(Button)findViewById(R.id.sendbtn);
        mSendButton.setOnClickListener(this);
        backBtn = (TextView) findViewById(R.id.backBtn);
        backBtn.setOnClickListener(this);
        mTryEmailBtn.setOnClickListener(this);
        mainLayout.setOnClickListener(this);
        parentView = (RelativeLayout) findViewById(R.id.parentView);
        parentView.setOnClickListener(this);
        phoneNumberEt.addTextChangedListener(this);
        mSendButton.setClickable(false);
        mSendButton.setEnabled(false);
    }

    private void hitCodeApi() {
        if (!Utilities.checkInternet(PhoneVerificationForgetPasswordActivity.this)) {
            showToast(R.string.no_internet_msg);
        } else {
            countryDialog = new CountryDialog1(PhoneVerificationForgetPasswordActivity.this);
            countryDialog.showCountryDialog();
        }
    }

    @Override
    public void setAdapter(RecyclerView recyclerView, ArrayList<?> mList) {
        super.setAdapter(recyclerView, mList);
        CountryCodeAdapter1 customAdapter = new CountryCodeAdapter1(this, mList, countryDialog);
        recyclerView.setAdapter(customAdapter);
    }


    @Override
    public void dispose() {
        finish();
    }

    public void setCodeText(String phoneCode, String counrtyId) {
        phonenoCode = phoneCode;
        mPhoneCodeTextView.setText(phoneCode);
        mCountryId = counrtyId;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.parentView:
                Utilities.hideKeypad(parentView);
                break;
            case R.id.sendbtn:
                Utilities.hideKeypad(v);
                numberValidation();
                break;
            case R.id.text_view_frontcode:
                Utilities.hideKeypad(v);
                hitCodeApi();
                break;
            case R.id.button_try_email:
                Utilities.hideKeypad(v);
                Intent intent = new Intent(PhoneVerificationForgetPasswordActivity.this, EmailVerificationForgetPasswordActivity.class);
                //intent.putExtra("action_for",actionFor);
                startActivity(intent);
                //IntentHandler.switchActivity(PhoneVerificationForgetPasswordActivity.this, EmailVerificationForgetPasswordActivity.class);
                finish();
                break;
            case R.id.backBtn:
                Utilities.hideKeypad(v);
                finish();
                break;
        }
    }

    private void numberValidation() {
        phoneNumber = phoneNumberEt.getText().toString().trim();
        if (phoneNumber.equals(null) || phoneNumber.equals("")) {
            Utilities.showMessage(this, "Enter Phone Number");
        } else {
            if (Utilities.checkInternet(PhoneVerificationForgetPasswordActivity.this)) {
                //if (actionFor.equals("forgot_password")) {
                    ForgotPasswordPhoneInput forgotPasswordPhoneInput = new ForgotPasswordPhoneInput();
                    forgotPasswordPhoneInput.setPhone(phoneNumber);
                    forgotPasswordPhoneInput.setCountryId(mCountryId);
                    ForgotPasswordPhonePresenter forgotPasswordPhonePresenter = new ForgotPasswordPhonePresenter(this, this);
                    forgotPasswordPhonePresenter.responseCheck(forgotPasswordPhoneInput);
                //}
                /*else {
                    PhoneVerifyInput phoneVerifyInput = new PhoneVerifyInput();
                    phoneVerifyInput.setPhone(phoneNumber);
                    phoneVerifyInput.setCountryId(phonenoCode);
                    PhoneVerifyPresenter phoneVerifyPresenter = new PhoneVerifyPresenter(this, this);
                    phoneVerifyPresenter.responseCheck(phoneVerifyInput);
                }*/
            } else {
                Utilities.showSmallToast(this, getString(R.string.no_internet_msg));
            }
        }

    }

    @Override
    public void setProgressBar() {
        progressBar.setVisibility(View.VISIBLE);
    }

    @Override
    public void dismiss() {
        progressBar.setVisibility(View.GONE);
    }

    @Override
    public void phoneVerifyError(Call<PhoneVerifyResponse> call, Throwable t) {
        Utilities.showMessage(this, getString(R.string.server_error));
    }

    @Override
    public void onPhoneVerifySuccess(Response<PhoneVerifyResponse> response) {
        PhoneVerifyResponse body = response.body();
        if (body != null) {
            String code = body.getResponse().getCode();
            if (code.equals("201")) {
                String otp = body.getResponse().getResult().getOtp();
                Log.e("otp--", otp);
                String phoneNo = body.getResponse().getResult().getPhone();
                Intent intent = new Intent(PhoneVerificationForgetPasswordActivity.this, PhoneOtpVerifyActivity.class);
                intent.putExtra("phone_no", phoneNo);
                intent.putExtra("phone_code", mCountryId);
                startActivity(intent);
            } else {
                Utilities.showMessage(this, body.getResponse().getMessage());
            }
        } else {
            Utilities.showMessage(this, getString(R.string.server_error_msg));
        }

    }

    @Override
    public void forgotPassPhoneError(Call<ForgotPasswordResponse> call, Throwable t) {
        Utilities.showMessage(this, getString(R.string.server_error_msg));
    }

    @Override
    public void onForgotPassPhoneSuccess(Response<ForgotPasswordResponse> response) {
        ForgotPasswordResponse body = response.body();
        if (body != null) {
            String code = body.getSuccess();
            if (code.equals("true")) {
                Intent intent = new Intent(PhoneVerificationForgetPasswordActivity.this, ForgotPasswordActivity.class);
                intent.putExtra("phone_number", phoneNumber);
                intent.putExtra("phone_code", mCountryId);
                intent.putExtra("action_with", "phone_number");
                startActivity(intent);
            } else {
                Utilities.showMessage(this, "Invalid Phone Number");
            }
        } else {
            Utilities.showMessage(this, "Invalid Phone Number");
        }
    }

    @Override
    public void beforeTextChanged(CharSequence s, int start, int count, int after) {

    }

    @Override
    public void onTextChanged(CharSequence s, int start, int before, int count) {

    }

    @Override
    public void afterTextChanged(Editable s) {
        if (phoneNumberEt.getText().toString().trim().length() > 5) {
            mCrossImageView.setVisibility(View.VISIBLE);
            // imageview_username.Tag = 1;
            mCrossImageView.setImageResource(R.drawable.check);//check
            mSendButton.setClickable(true);
            mSendButton.setEnabled(true);
        } else {
            mCrossImageView.setVisibility(View.VISIBLE);
            mCrossImageView.setImageResource(R.drawable.cross_icon);
            mSendButton.setClickable(false);
            mSendButton.setEnabled(false);//check
        }
    }
}
