package com.nvcomputers.ten.adapter;

import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.nvcomputers.ten.R;
import com.nvcomputers.ten.model.output.NewsFeedOutput;
import com.nvcomputers.ten.model.output.NotificationLitResponse;
import com.nvcomputers.ten.utils.DateTimeUtil;
import com.nvcomputers.ten.utils.HttpUtils;
import com.nvcomputers.ten.views.core.BaseFragment;
import com.nvcomputers.ten.views.home.TimedPostActivity;

import java.util.List;

import jp.wasabeef.glide.transformations.RoundedCornersTransformation;

/**
 * Created by KaurGurleen on 5/1/2017.
 */

public class TimedPostAdapter extends RecyclerView.Adapter<TimedPostAdapter.TimedPostViewHolder> {
    private TimedPostActivity mActivity;
    private int listCount;
    private List<NotificationLitResponse.Notifications> notificationList;
    private String type;
    private BaseFragment baseFragment;

    public TimedPostAdapter(TimedPostActivity timedPostActivity, List<NotificationLitResponse.Notifications> mArrayList) {
        this.mActivity = timedPostActivity;
        this.notificationList = mArrayList;
        if (notificationList != null) {
            listCount = notificationList.size();
        }
    }

    @Override
    public TimedPostViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View itemView = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.row_timed_post, parent, false);
        TimedPostAdapter.TimedPostViewHolder vh = new TimedPostAdapter.TimedPostViewHolder(itemView);
        return vh;
    }

    @Override
    public void onBindViewHolder(TimedPostViewHolder holder, int position) {
        NotificationLitResponse.Notifications data = notificationList.get(position);
        String user_name = data.getUser().getUsername();
        holder.userName.setText(user_name);
        String noti_type = data.getType();
        if (noti_type.contains("COMMENT")) {
            holder.typeIcon.setImageResource(R.drawable.commentselected);
        } else if (noti_type.contains("LIKE")) {
            holder.typeIcon.setImageResource(R.drawable.likeselected);
        } else {
            holder.typeIcon.setImageResource(R.drawable.tabbar4selected);
        }
        NewsFeedOutput.Posts postData = data.getPost();//NotificationLitResponse.Post
        if (postData != null) {
            String post_time = data.getPost().getExpiration();
            if (post_time != null) {
                if (DateTimeUtil.checkExpiration(post_time)) {
                    holder.postTime.setText(DateTimeUtil.getTopTime(post_time, data.getPost().getDatestamp()));
                } else {
                    holder.postTime.setText(DateTimeUtil.getRemainingTimeInMinutes(post_time));
                }
            }

            String post_img = data.getPost().getVideoUrl();
        }

        String noti_msg = data.getMessage();
        holder.notiMsg.setText(noti_msg);
        Glide.with(mActivity)
                .load(HttpUtils.getProfileImageURL(data.getUser().getUsername()))
                .bitmapTransform(new RoundedCornersTransformation(mActivity, 15, 15))
                .diskCacheStrategy(DiskCacheStrategy.NONE)
                .skipMemoryCache(true)
                .into(holder.userImage);


    }

    @Override
    public int getItemCount() {
        return notificationList.size();
    }


    public class TimedPostViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
        private final TextView userName;
        private final ImageView userImage;
        private final TextView postTime;
        private final ImageView postIcon;
        private final ImageView typeIcon;
        private final TextView notiMsg;
        private final TextView notiTime;
        private final RelativeLayout notiRow;
        private final RelativeLayout main_layout;

        public TimedPostViewHolder(View itemView) {
            super(itemView);
            notiRow = (RelativeLayout) itemView.findViewById(R.id.notification_row);
            notiRow.setOnClickListener(this);
            userName = (TextView) itemView.findViewById(R.id.user_name);
            userImage = (ImageView) itemView.findViewById(R.id.user_img);
            userImage.setOnClickListener(this);
            postTime = (TextView) itemView.findViewById(R.id.post_time);
            postIcon = (ImageView) itemView.findViewById(R.id.postIcon);
            typeIcon = (ImageView) itemView.findViewById(R.id.action_img);
            notiMsg = (TextView) itemView.findViewById(R.id.action_txt);
            notiTime = (TextView) itemView.findViewById(R.id.noti_tym);
            main_layout = (RelativeLayout) itemView.findViewById(R.id.main_layout);

            // notiMsg = (TextView) itemView.findViewById(R.id.action_txt);
//            itemView.setOnClickListener(new View.OnClickListener() {
//                @Override
//                public void onClick(View v) {
//                    int positionn = TimedPostViewHolder.this.getLayoutPosition();
//                    if (notificationList.get(positionn).getType().equalsIgnoreCase("COMMENT") || notificationList.get(positionn).getType().equalsIgnoreCase("LIKE") || type.equalsIgnoreCase("MENTIONPOST") || type.equalsIgnoreCase("MENTIONCOMMENT")
//                            || notificationList.get(positionn).getType().equalsIgnoreCase("REPOST")
//                            || notificationList.get(positionn).getType().equalsIgnoreCase("POST_EXPIRED")
//                            || notificationList.get(positionn).getType().equalsIgnoreCase("FOLLWERSPOST"))
//
//                    {
//                        Intent i = new Intent(mActivity, LandingActivity.class);
//                        mActivity.startActivity(i);
//                    } else if (notificationList.get(positionn).getType().equalsIgnoreCase("COMMENT") || notificationList.get(positionn).getType().equalsIgnoreCase("FOLLOW") ||
//                            notificationList.get(positionn).getType().equalsIgnoreCase("FOLLOWING") ||
//                            notificationList.get(positionn).getType().equalsIgnoreCase("LIKE")) {
//                        Intent i = new Intent(mActivity, ProfileActivity.class);
//                        mActivity.startActivity(i);
//                        mActivity.finish();
//
//
//                    }
//                }
//            });
        }

        @Override
        public void onClick(View view) {
            int positionn = TimedPostViewHolder.this.getLayoutPosition();
        }
    }
}
