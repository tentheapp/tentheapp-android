
package com.nvcomputers.ten.adapter;

import android.content.Intent;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.bumptech.glide.signature.StringSignature;
import com.nvcomputers.ten.R;
import com.nvcomputers.ten.interfaces.Core;
import com.nvcomputers.ten.model.output.GroupedRepostDetailResponse;
import com.nvcomputers.ten.utils.HttpUtils;
import com.nvcomputers.ten.utils.PreferenceKeys;
import com.nvcomputers.ten.utils.SharedPrefsHelper;
import com.nvcomputers.ten.views.core.BaseActivity;
import com.nvcomputers.ten.views.core.BaseFragment;
import com.nvcomputers.ten.views.profile.NewProfileActivity;

import java.util.ArrayList;


/**
 * Created by Thaparsneh on 7/14/2017.
 */


public class ReposterListAdapter extends RecyclerView.Adapter<ReposterListAdapter.ViewHolder> implements Core {

    private SharedPrefsHelper sharedPref;
    private ArrayList<GroupedRepostDetailResponse.Notifications> mList;
    private BaseActivity mActivity;
    private BaseFragment mBaseFragment;

    public ReposterListAdapter(BaseActivity context, ArrayList<?> mList) {
        this.mList = (ArrayList<GroupedRepostDetailResponse.Notifications>) mList;
        this.mActivity = context;
        sharedPref = new SharedPrefsHelper(context);
    }

    public ReposterListAdapter(BaseFragment context, ArrayList<?> mList) {
        this.mList = (ArrayList<GroupedRepostDetailResponse.Notifications>) mList;
        this.mBaseFragment = context;
        this.mActivity = context.getBaseActivity();
        sharedPref = new SharedPrefsHelper(mActivity);
    }


    @Override
    public ReposterListAdapter.ViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
        View itemLayoutView = LayoutInflater.from(viewGroup.getContext())
                .inflate(R.layout.row_timers, null);
        // create ViewHolder
        ReposterListAdapter.ViewHolder viewHolder = new ReposterListAdapter.ViewHolder(itemLayoutView);
        return viewHolder;
    }

    @Override
    public void onBindViewHolder(ReposterListAdapter.ViewHolder viewHolder, int position) {

        String imageTag = sharedPref.get(PreferenceKeys.PREF_IMAGE_TAG, "");
        Glide.with(mActivity)
                .load(HttpUtils.getProfileImageURL(mList.get(position).getUser().getUsername()))
                .error(mActivity.getResources().getDrawable(R.drawable.myprofilelarge))
                .placeholder(R.drawable.myprofilelarge)
                .diskCacheStrategy(DiskCacheStrategy.RESULT)
                .signature(new StringSignature(imageTag))
                .into(viewHolder.mUserImagView);

        String userName = mList.get(position).getUser().getUsername();

        viewHolder.mUserNameTextView.setText(userName);
    }

    @Override
    public int getItemCount() {
        return mList == null ? 0 : mList.size();
    }

    @Override
    public void showToast(int resId) {
        Toast.makeText(mActivity, mActivity.getResources().getString(resId), Toast.LENGTH_SHORT).show();
    }

    @Override
    public void showToast(String message) {
        Toast.makeText(mActivity, message, Toast.LENGTH_SHORT).show();
    }

    @Override
    public void showDialog() {

    }

    @Override
    public void hideDialog() {

    }

    public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        private TextView mUserNameTextView, mFollowingTextView;
        private ImageView mUserImagView;

        public ViewHolder(View itemView) {
            super(itemView);
            mUserImagView = (ImageView) itemView.findViewById(R.id.image_view_user);
            mUserNameTextView = (TextView) itemView.findViewById(R.id.text_view_usernm);
            mFollowingTextView = (TextView) itemView.findViewById(R.id.text_view_follow);
            mFollowingTextView.setOnClickListener(this);
            mFollowingTextView.setVisibility(View.GONE);
            mUserImagView.setOnClickListener(this);
            itemView.findViewById(R.id.rl_follow).setOnClickListener(this);
        }

        @Override
        public void onClick(View view) {
            int position = getLayoutPosition();
            switch (view.getId()) {
                case R.id.rl_follow:
                    if (mBaseFragment == null) {
                        Intent intent = new Intent(mActivity, NewProfileActivity.class);
                        intent.putExtra("username", mList.get(position).getUser().getUsername());
                        mActivity.startActivity(intent);
                    } else {
//                        String friendId = mList.get(position).getFriended();
//                        if (!friendId.contains(mActivity.getString(R.string.friended_self))) {
//                            Bundle bundle = new Bundle();
//                            bundle.putString("username", mList.get(position).getUsername());
//                            mBaseFragment.replaceChildFragment(R.id.frame_layout_timers, new NewProfileFragment(), bundle);
//                        }
                    }
                    break;
            }
        }
    }


}

